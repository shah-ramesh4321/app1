{"version":3,"sources":["components/Button.js","components/Display.js","App.js","reportWebVitals.js","index.js"],"names":["Button","props","className","title","Display","count","state","countVal","this","setState","onClick","increment","decrement","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iSAGaA,EAAS,SAACC,GACrB,OACE,mCACE,wBAAQC,UAAWD,EAAME,MAAzB,SAAiCF,EAAME,WCFhCC,G,MAAb,kDACE,aAAe,IAAD,8BACZ,gBACKD,MAAQ,KACb,EAAKE,MAAQ,EACb,EAAKC,MAAQ,CACXC,SAAU,EAAKF,OALL,EADhB,6CAUE,WACEG,KAAKH,QACLG,KAAKC,SAAS,CACZF,SAAUC,KAAKH,UAbrB,uBAgBE,WACMG,KAAKH,MAAQ,IACfG,KAAKH,QACLG,KAAKC,SAAS,CACZF,SAAUC,KAAKH,WApBvB,oBAyBE,WAAU,IAAD,OACP,OACE,sBAAKH,UAAU,YAAf,UACE,6CAAgBM,KAAKF,MAAMC,YAC3B,sBACEG,QAAS,WACP,EAAKC,aAFT,SAKE,cAAC,EAAD,CAAQR,MAAO,WAGjB,sBACEO,QAAS,WACP,EAAKE,aAFT,SAKE,cAAC,EAAD,CAAQT,MAAO,mBA1CzB,GAA6BU,IAAMC,YCOpBC,MARf,WACE,OACE,qBAAKb,UAAU,MAAf,SACE,cAAC,EAAD,OCMSc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.835c3554.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Button.css\";\r\n\r\nexport const Button = (props) => {\r\n  return (\r\n    <>\r\n      <button className={props.title}>{props.title}</button>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Button } from \"./Button\";\r\nimport \"./Display.css\";\r\n\r\nexport class Display extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.title = null;\r\n    this.count = 0;\r\n    this.state = {\r\n      countVal: this.count,\r\n    };\r\n  }\r\n\r\n  increment() {\r\n    this.count++;\r\n    this.setState({\r\n      countVal: this.count,\r\n    });\r\n  }\r\n  decrement() {\r\n    if (this.count > 0) {\r\n      this.count--;\r\n      this.setState({\r\n        countVal: this.count,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <h2>Count is : {this.state.countVal}</h2>\r\n        <span\r\n          onClick={() => {\r\n            this.increment();\r\n          }}\r\n        >\r\n          <Button title={\"Plus\"} />\r\n        </span>\r\n\r\n        <span\r\n          onClick={() => {\r\n            this.decrement();\r\n          }}\r\n        >\r\n          <Button title={\"Minus\"} />\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import \"./App.css\";\nimport { Display } from \"./components/Display\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Display />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}